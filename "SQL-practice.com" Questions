-- These practice problems can be found on https://www.sql-practice.com/
-- These questions come from the "Hospital" database question set. I have posted 24 questions here, 
-- with every 8 taken from each difficulty (8 from the "Easy" set, 8 from the "Medium" set, etc.)


##############################################################################################################
EASY QUESTIONS
##############################################################################################################

Question #1:
Show first name, last name, and gender of patients whose gender is 'M'
Code:
  SELECT first_name, last_name, gender FROM patients
WHERE gender = 'M';

##############################################################################################################

Question #2:
Show first name and last name of patients who does not have allergies. (null).
Code:
  SELECT first_name, last_name FROM patients
WHERE allergies IS null;

##############################################################################################################

Question #3:
Show first name of patients that start with the letter 'C'
Code: 
  SELECT first_name FROM patients
WHERE first_name LIKE 'C%';

##############################################################################################################

Question #4:
Show first name and last name of patients that weight within the range of 100 to 120 (inclusive)
Code:
  SELECT first_name, last_name from patients
where weight between 100 and 120;

##############################################################################################################

Question #5:
Update the patients table for the allergies column. If the patient's allergies is null then replace it with 'NKA'
Code:
  update patients
set allergies = 'NKA'
where allergies is null;
  
##############################################################################################################

Question #6: 
Show first name and last name concatinated into one column to show their full name.
Code:
  select CONCAT(first_name, ' ', last_name) AS full_name from patients;
  
##############################################################################################################

Question #7: 
Show first name, last name, and the full province name of each patient.
Example: 'Ontario' instead of 'ON'

Related table schemata:
PAITENTS:
  patient_id____________INT
  first_name____________TEXT
  last_name_____________TEXT
  gender________________CHAR(1)
  birth_date____________DATE
  city__________________TEXT
  province_id___________CHAR(2)
  allergies_____________TEXT
  height________________INT
  weight________________INT
PROVINCE_NAMES:
  province_id___________CHAR(2)
  province_name_________TEXT

Code:
  select first_name, last_name, province_name from patients
Inner join province_names on patients.province_id = province_names.province_id;

##############################################################################################################

Question #8:
Show how many patients have a birth_date with 2010 as the birth year.
Code:
  SELECT count(*) from patients
WHERE YEAR(birth_date) = 2010;

##############################################################################################################
MEDIUM QUESTIONS
##############################################################################################################

Question #9:
Show unique years from patients and order them by ascending.
Code:
  SELECT distinct(Year(birth_date)) FROM patients
ORDER BY birth_date;

##############################################################################################################

Question #10:
Show unique first names from the patients table which only occurs once in the list.
For example, if two or more people are named 'John' in the first_name column 
then don't include their name in the output list. If only 1 person is named 'Leo' 
then include them in the output.

Code:
  SELECT first_name FROM patients
GROUP BY first_name
HAVING COUNT(first_name) = 1;

##############################################################################################################

Question #12:
Show patient_id and first_name from patients where their 
first_name starts and ends with 's' and is at least 6 characters long.
Code:
  SELECT patient_id, first_name FROM patients
WHERE first_name LIKE "S____%S";

##############################################################################################################

Question #13:
Show patient_id, first_name, last_name from patients whos diagnosis is 'Dementia'.
Primary diagnosis is stored in the admissions table.

Related table schemata:
PAITENTS:
  patient_id____________INT
  first_name____________TEXT
  last_name_____________TEXT
  gender________________CHAR(1)
  birth_date____________DATE
  city__________________TEXT
  province_id___________CHAR(2)
  allergies_____________TEXT
  height________________INT
  weight________________INT
ADMISSIONS:
  patient_id____________INT
  admission_date________DATE
  discharge_date________DATE
  diagnoisis____________TEXT
  attending_doctor_id___INT

Code:
  SELECT patients.patient_id, first_name, last_name FROM patients
INNER JOIN admissions ON patients.patient_id = admissions.patient_id
WHERE diagnosis = 'Dementia';

##############################################################################################################

Question #14:
Display every patient's first_name.
Order the list by the length of each name and then by alphabetically.
Code:
  SELECT  first_name FROM patients
ORDER BY LEN(first_name), first_name;

##############################################################################################################

Question #15:
  
##############################################################################################################

Question #16:

##############################################################################################################
HARD QUESTIONS
##############################################################################################################

Question #17:

##############################################################################################################

Question #18:
